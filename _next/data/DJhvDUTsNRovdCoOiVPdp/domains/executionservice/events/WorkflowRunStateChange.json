{"pageProps":{"event":{"name":"WorkflowRunStateChange","version":"0.0.1","summary":"Event represents a change in the state of a workflow execution.\n","domain":"executionservice","producerNames":["bsshicav2fastqcopymanager","cttsov2manager","bclconvertmanager"],"consumerNames":["workflowmanager"],"owners":["Florian","Victor"],"externalLinks":[],"badges":[],"tags":[],"producers":[{"name":"bsshicav2fastqcopymanager","summary":"Service managing the copy of FASTQ data.\n","domain":null,"owners":["Alexis"],"repository":{},"tags":[],"externalLinks":[],"badges":[],"publishes":[{"name":"WorkflowRunStateChange","version":"0.0.1","summary":"Event represents a change in the state of a workflow execution.\n","domain":"executionservice","producerNames":["bsshicav2fastqcopymanager","cttsov2manager","bclconvertmanager"],"consumerNames":["workflowmanager"],"owners":["Florian","Victor"],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}],"subscribes":[{"name":"WorkflowRunStateChange","version":"0.0.1","summary":"Event represents a change in the state of a workflow execution.\n","domain":"workflowmanager","producerNames":["workflowmanager"],"consumerNames":["bsshicav2fastqcopymanager","cttsov2manager","bclconvertmanager"],"owners":["Florian","Victor"],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}]},{"name":"cttsov2manager","summary":"Service managing execution of the ctTSO500v2 workflow.\n","domain":null,"owners":["Alexis"],"repository":{},"tags":[],"externalLinks":[],"badges":[],"publishes":[{"name":"WorkflowRunStateChange","version":"0.0.1","summary":"Event represents a change in the state of a workflow execution.\n","domain":"executionservice","producerNames":["bsshicav2fastqcopymanager","cttsov2manager","bclconvertmanager"],"consumerNames":["workflowmanager"],"owners":["Florian","Victor"],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}],"subscribes":[{"name":"WorkflowRunStateChange","version":"0.0.1","summary":"Event represents a change in the state of a workflow execution.\n","domain":"workflowmanager","producerNames":["workflowmanager"],"consumerNames":["bsshicav2fastqcopymanager","cttsov2manager","bclconvertmanager"],"owners":["Florian","Victor"],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}]},{"name":"bclconvertmanager","summary":"Service monitoring the status of raw data converstion via Bcl Convert.\n","domain":null,"owners":["Ray"],"repository":{},"tags":[],"externalLinks":[],"badges":[],"publishes":[{"name":"WorkflowRunStateChange","version":"0.0.1","summary":"Event represents a change in the state of a workflow execution.\n","domain":"executionservice","producerNames":["bsshicav2fastqcopymanager","cttsov2manager","bclconvertmanager"],"consumerNames":["workflowmanager"],"owners":["Florian","Victor"],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}],"subscribes":[{"name":"WorkflowRunStateChange","version":"0.0.1","summary":"Event represents a change in the state of a workflow execution.\n","domain":"workflowmanager","producerNames":["workflowmanager"],"consumerNames":["bsshicav2fastqcopymanager","cttsov2manager","bclconvertmanager"],"owners":["Florian","Victor"],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}]}],"consumers":[{"name":"workflowmanager","summary":"Service managing Workflow and WorkflowRun states.\n","domain":null,"owners":["Florian","Victor"],"repository":{},"tags":[],"externalLinks":[],"badges":[],"publishes":[{"name":"WorkflowRunStateChange","version":"0.0.1","summary":"Event represents a change in the state of a workflow execution.\n","domain":"workflowmanager","producerNames":["workflowmanager"],"consumerNames":["bsshicav2fastqcopymanager","cttsov2manager","bclconvertmanager"],"owners":["Florian","Victor"],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}],"subscribes":[{"name":"WorkflowRunStateChange","version":"0.0.1","summary":"Event represents a change in the state of a workflow execution.\n","domain":"executionservice","producerNames":["bsshicav2fastqcopymanager","cttsov2manager","bclconvertmanager"],"consumerNames":["workflowmanager"],"owners":["Florian","Victor"],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}]}],"openAPISpec":null,"historicVersions":[],"schema":{"snippet":"{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"WorkflowRunStateChange\"\n  },\n  \"paths\": {},\n  \"components\": {\n    \"schemas\": {\n      \"AWSEvent\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"detail-type\",\n          \"detail\",\n          \"source\"\n        ],\n        \"properties\": {\n          \"detail\": {\n            \"$ref\": \"#/components/schemas/WorkflowRunStateChange\"\n          },\n          \"account\": {\n            \"type\": \"string\"\n          },\n          \"detail-type\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"region\": {\n            \"type\": \"string\"\n          },\n          \"resources\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"source\": {\n            \"type\": \"string\"\n          },\n          \"time\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"WorkflowRunStateChange\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"portalRunId\",\n          \"executionId\",\n          \"timestamp\",\n          \"status\",\n          \"workflowName\",\n          \"workflowVersion\",\n          \"workflowRunName\"\n        ],\n        \"properties\": {\n          \"portalRunId\": {\n            \"type\": \"string\"\n          },\n          \"executionId\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"workflowName\": {\n            \"type\": \"string\"\n          },\n          \"workflowVersion\": {\n            \"type\": \"string\"\n          },\n          \"workflowRunName\": {\n            \"type\": \"string\"\n          },\n          \"payload\": {\n            \"$ref\": \"#/components/schemas/Payload\"\n          }\n        }\n      },\n      \"Payload\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"version\",\n          \"data\"\n        ],\n        \"properties\": {\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"type\": \"object\"\n          }\n        }\n      }\n    }\n  }\n}\n","language":"json","extension":"json"},"examples":[]},"eventPath":"/domains/executionservice/events/WorkflowRunStateChange","breadCrumbs":[{"name":"Domain","href":"/domains","current":false},{"name":"executionservice","href":"/domains/executionservice","current":false},{"name":"Events","href":"/events?domain=executionservice","current":false},{"name":"WorkflowRunStateChange","href":"/domains/executionservice/events/WorkflowRunStateChange","current":true}],"markdown":{"content":"\n<Admonition>When services fire this event they can add their own payload data depending on the state of the workflow they manage. We use dedicated data schemas to ensure this data payload follows its intended structure. This allows consumers to generate code bindings against it instead of guessing its content.</Admonition>\n\n### Details\n\nThis event is triggered when the the workflow execution service registers a change in the state of a workflow execution.\n\n<NodeGraph title=\"Consumer / Producer Diagram\" />\n\n<Schema />","source":{"compiledSource":"var p=Object.defineProperty,m=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var a=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var d=(e,o,t)=>o in e?p(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t,i=(e,o)=>{for(var t in o||(o={}))s.call(o,t)&&d(e,t,o[t]);if(a)for(var t of a(o))r.call(o,t)&&d(e,t,o[t]);return e},c=(e,o)=>m(e,u(o));var h=(e,o)=>{var t={};for(var n in e)s.call(e,n)&&o.indexOf(n)<0&&(t[n]=e[n]);if(e!=null&&a)for(var n of a(e))o.indexOf(n)<0&&r.call(e,n)&&(t[n]=e[n]);return t};const makeShortcode=e=>function(t){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",i({},t))},Admonition=makeShortcode(\"Admonition\"),NodeGraph=makeShortcode(\"NodeGraph\"),Schema=makeShortcode(\"Schema\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var n=t,{components:e}=n,o=h(n,[\"components\"]);return mdx(MDXLayout,c(i(i({},layoutProps),o),{components:e,mdxType:\"MDXLayout\"}),mdx(Admonition,{mdxType:\"Admonition\"},\"When services fire this event they can add their own payload data depending on the state of the workflow they manage. We use dedicated data schemas to ensure this data payload follows its intended structure. This allows consumers to generate code bindings against it instead of guessing its content.\"),mdx(\"h3\",null,\"Details\"),mdx(\"p\",null,\"This event is triggered when the the workflow execution service registers a change in the state of a workflow execution.\"),mdx(NodeGraph,{title:\"Consumer / Producer Diagram\",mdxType:\"NodeGraph\"}),mdx(Schema,{mdxType:\"Schema\"}))}MDXContent.isMDXComponent=!0;\n","scope":{}},"lastModifiedDate":"2024/5/27"},"loadedVersion":"latest"},"__N_SSG":true}