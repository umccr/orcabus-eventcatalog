"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4507],{54507:function(e,t,n){n.r(t),n.d(t,{diagram:function(){return m}});var o=n(10232),r=n(31347),a=n(23216),l=n(20089),i=n(26746);n(27693),n(7608),n(54569);const s=new i;let d={};const c={};let h={};const p=(e,t,n)=>{const o={TB:{in:{north:"north"},out:{south:"west",west:"east",east:"south"}},LR:{in:{west:"west"},out:{east:"south",south:"north",north:"east"}},RL:{in:{east:"east"},out:{west:"north",north:"south",south:"west"}},BT:{in:{south:"south"},out:{north:"east",east:"west",west:"north"}}};return o.TD=o.TB,o[n][t][e]},u=(e,t,n)=>{if(l.l.info("getNextPort",{node:e,edgeDirection:t,graphDirection:n}),!d[e])switch(n){case"TB":case"TD":d[e]={inPosition:"north",outPosition:"south"};break;case"BT":d[e]={inPosition:"south",outPosition:"north"};break;case"RL":d[e]={inPosition:"east",outPosition:"west"};break;case"LR":d[e]={inPosition:"west",outPosition:"east"}}const o="in"===t?d[e].inPosition:d[e].outPosition;return"in"===t?d[e].inPosition=p(d[e].inPosition,t,n):d[e].outPosition=p(d[e].outPosition,t,n),o},b=function(e,t,n,o){l.l.info("abc78 edges = ",e);const i=o.insert("g").attr("class","edgeLabels");let s,d,p={},b=t.db.getDirection();if(void 0!==e.defaultStyle){const t=(0,l.k)(e.defaultStyle);s=t.style,d=t.labelStyle}return e.forEach((function(t){const o="L-"+t.start+"-"+t.end;void 0===p[o]?(p[o]=0,l.l.info("abc78 new entry",o,p[o])):(p[o]++,l.l.info("abc78 new entry",o,p[o]));let y=o+"-"+p[o];l.l.info("abc78 new link id to be used is",o,y,p[o]);const g="LS-"+t.start,f="LE-"+t.end,w={style:"",labelStyle:""};switch(w.minlen=t.length||1,"arrow_open"===t.type?w.arrowhead="none":w.arrowhead="normal",w.arrowTypeStart="arrow_open",w.arrowTypeEnd="arrow_open",t.type){case"double_arrow_cross":w.arrowTypeStart="arrow_cross";case"arrow_cross":w.arrowTypeEnd="arrow_cross";break;case"double_arrow_point":w.arrowTypeStart="arrow_point";case"arrow_point":w.arrowTypeEnd="arrow_point";break;case"double_arrow_circle":w.arrowTypeStart="arrow_circle";case"arrow_circle":w.arrowTypeEnd="arrow_circle"}let k="",x="";switch(t.stroke){case"normal":k="fill:none;",void 0!==s&&(k=s),void 0!==d&&(x=d),w.thickness="normal",w.pattern="solid";break;case"dotted":w.thickness="normal",w.pattern="dotted",w.style="fill:none;stroke-width:2px;stroke-dasharray:3;";break;case"thick":w.thickness="thick",w.pattern="solid",w.style="stroke-width: 3.5px;fill:none;"}if(void 0!==t.style){const e=(0,l.k)(t.style);k=e.style,x=e.labelStyle}w.style=w.style+=k,w.labelStyle=w.labelStyle+=x,void 0!==t.interpolate?w.curve=(0,l.n)(t.interpolate,r.c_6):void 0!==e.defaultInterpolate?w.curve=(0,l.n)(e.defaultInterpolate,r.c_6):w.curve=(0,l.n)(c.curve,r.c_6),void 0===t.text?void 0!==t.style&&(w.arrowheadStyle="fill: #333"):(w.arrowheadStyle="fill: #333",w.labelpos="c"),w.labelType=t.labelType,w.label=t.text.replace(l.e.lineBreakRegex,"\n"),void 0===t.style&&(w.style=w.style||"stroke: #333; stroke-width: 1.5px;fill:none;"),w.labelStyle=w.labelStyle.replace("color:","fill:"),w.id=y,w.classes="flowchart-link "+g+" "+f;const m=(0,a.f)(i,w),{source:v,target:T,sourceId:$,targetId:_}=((e,t)=>{let n=e.start,o=e.end;const r=n,a=o,l=h[n],i=h[o];return l&&i?("diamond"===l.type&&(n=`${n}-${u(n,"out",t)}`),"diamond"===i.type&&(o=`${o}-${u(o,"in",t)}`),{source:n,target:o,sourceId:r,targetId:a}):{source:n,target:o}})(t,b);l.l.debug("abc78 source and target",v,T),n.edges.push({id:"e"+t.start+t.end,sources:[v],targets:[T],sourceId:$,targetId:_,labelEl:m,labels:[{width:w.width,height:w.height,orgWidth:w.width,orgHeight:w.height,text:w.label,layoutOptions:{"edgeLabels.inline":"true","edgeLabels.placement":"CENTER"}}],edgeData:w})})),n},y=function(e,t,n){const o=((e,t,n)=>{const{parentById:o}=n,r=new Set;let a=e;for(;a;){if(r.add(a),a===t)return a;a=o[a]}for(a=t;a;){if(r.has(a))return a;a=o[a]}return"root"})(e,t,n);if(void 0===o||"root"===o)return{x:0,y:0};const r=h[o].offset;return{x:r.posX,y:r.posY}},g=function(e,t,n,o,l,i){const s=y(t.sourceId,t.targetId,l),d=t.sections[0].startPoint,c=t.sections[0].endPoint,h=(t.sections[0].bendPoints?t.sections[0].bendPoints:[]).map((e=>[e.x+s.x,e.y+s.y])),p=[[d.x+s.x,d.y+s.y],...h,[c.x+s.x,c.y+s.y]],{x:u,y:b}=(0,a.k)(t.edgeData),g=(0,r.jvg)().x(u).y(b).curve(r.c_6),f=e.insert("path").attr("d",g(p)).attr("class","path "+n.classes).attr("fill","none"),w=e.insert("g").attr("class","edgeLabel"),k=(0,r.Ys)(w.node().appendChild(t.labelEl)),x=k.node().firstChild.getBoundingClientRect();k.attr("width",x.width),k.attr("height",x.height),w.attr("transform",`translate(${t.labels[0].x+s.x}, ${t.labels[0].y+s.y})`),function(e,t,n,o,r){let l="";o&&(l=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search,l=l.replace(/\(/g,"\\("),l=l.replace(/\)/g,"\\)")),(0,a.m)(e,t,l,r,n)}(f,n,o.type,o.arrowMarkerAbsolute,i)},f=(e,t)=>{e.forEach((e=>{e.children||(e.children=[]);const n=t.childrenById[e.id];n&&n.forEach((t=>{e.children.push(h[t])})),f(e.children,t)}))},w=(e,t,n,o,r,a,i)=>{n.forEach((function(n){if(n)if(h[n.id].offset={posX:n.x+e,posY:n.y+t,x:e,y:t,depth:i,width:n.width,height:n.height},"group"===n.type){const o=r.insert("g").attr("class","subgraph");o.insert("rect").attr("class","subgraph subgraph-lvl-"+i%5+" node").attr("x",n.x+e).attr("y",n.y+t).attr("width",n.width).attr("height",n.height);const a=o.insert("g").attr("class","label"),s=(0,l.F)().flowchart.htmlLabels?n.labelData.width/2:0;a.attr("transform",`translate(${n.labels[0].x+e+n.x+s}, ${n.labels[0].y+t+n.y+3})`),a.node().appendChild(n.labelData.labelNode),l.l.info("Id (UGH)= ",n.type,n.labels)}else l.l.info("Id (UGH)= ",n.id),n.el.attr("transform",`translate(${n.x+e+n.width/2}, ${n.y+t+n.height/2})`)})),n.forEach((function(n){n&&"group"===n.type&&w(e+n.x,t+n.y,n.children,o,r,a,i+1)}))},k={getClasses:function(e,t){return l.l.info("Extracting classes"),t.db.getClasses()},draw:async function(e,t,n,o){var i;o.db.clear(),h={},d={},o.db.setGen("gen-2"),o.parser.parse(e);const c=(0,r.Ys)("body").append("div").attr("style","height:400px").attr("id","cy");let p={id:"root",layoutOptions:{"elk.hierarchyHandling":"INCLUDE_CHILDREN","org.eclipse.elk.padding":"[top=100, left=100, bottom=110, right=110]","elk.layered.spacing.edgeNodeBetweenLayers":"30","elk.direction":"DOWN"},children:[],edges:[]};switch(l.l.info("Drawing flowchart using v3 renderer",s),o.db.getDirection()){case"BT":p.layoutOptions["elk.direction"]="UP";break;case"TB":p.layoutOptions["elk.direction"]="DOWN";break;case"LR":p.layoutOptions["elk.direction"]="RIGHT";break;case"RL":p.layoutOptions["elk.direction"]="LEFT"}const{securityLevel:u,flowchart:y}=(0,l.F)();let k;"sandbox"===u&&(k=(0,r.Ys)("#i"+t));const x="sandbox"===u?(0,r.Ys)(k.nodes()[0].contentDocument.body):(0,r.Ys)("body"),m="sandbox"===u?k.nodes()[0].contentDocument:document,v=x.select(`[id="${t}"]`);(0,a.a)(v,["point","circle","cross"],o.type,t);const T=o.db.getVertices();let $;const _=o.db.getSubGraphs();l.l.info("Subgraphs - ",_);for(let r=_.length-1;r>=0;r--)$=_[r],o.db.addVertex($.id,{text:$.title,type:$.labelType},"group",void 0,$.classes,$.dir);const I=v.insert("g").attr("class","subgraphs"),E=function(e){const t={parentById:{},childrenById:{}},n=e.getSubGraphs();return l.l.info("Subgraphs - ",n),n.forEach((function(e){e.nodes.forEach((function(n){t.parentById[n]=e.id,void 0===t.childrenById[e.id]&&(t.childrenById[e.id]=[]),t.childrenById[e.id].push(n)}))})),n.forEach((function(e){e.id,void 0!==t.parentById[e.id]&&t.parentById[e.id]})),t}(o.db);p=await async function(e,t,n,o,r,i,s){const d=n.select(`[id="${t}"]`).insert("g").attr("class","nodes"),c=Object.keys(e);return await Promise.all(c.map((async function(t){const n=e[t];let s="default";n.classes.length>0&&(s=n.classes.join(" ")),s+=" flowchart-label";const c=(0,l.k)(n.styles);let p=void 0!==n.text?n.text:n.id;const u={width:0,height:0},b=[{id:n.id+"-west",layoutOptions:{"port.side":"WEST"}},{id:n.id+"-east",layoutOptions:{"port.side":"EAST"}},{id:n.id+"-south",layoutOptions:{"port.side":"SOUTH"}},{id:n.id+"-north",layoutOptions:{"port.side":"NORTH"}}];let y=0,g="",f={};switch(n.type){case"round":y=5,g="rect";break;case"square":case"group":default:g="rect";break;case"diamond":g="question",f={portConstraints:"FIXED_SIDE"};break;case"hexagon":g="hexagon";break;case"odd":case"odd_right":g="rect_left_inv_arrow";break;case"lean_right":g="lean_right";break;case"lean_left":g="lean_left";break;case"trapezoid":g="trapezoid";break;case"inv_trapezoid":g="inv_trapezoid";break;case"circle":g="circle";break;case"ellipse":g="ellipse";break;case"stadium":g="stadium";break;case"subroutine":g="subroutine";break;case"cylinder":g="cylinder";break;case"doublecircle":g="doublecircle"}const w={labelStyle:c.labelStyle,shape:g,labelText:p,labelType:n.labelType,rx:y,ry:y,class:s,style:c.style,id:n.id,link:n.link,linkTarget:n.linkTarget,tooltip:r.db.getTooltip(n.id)||"",domId:r.db.lookUpDomId(n.id),haveCallback:n.haveCallback,width:"group"===n.type?500:void 0,dir:n.dir,type:n.type,props:n.props,padding:(0,l.F)().flowchart.padding};let k,x;if("group"!==w.type)x=await(0,a.e)(d,w,n.dir),k=x.node().getBBox();else{o.createElementNS("http://www.w3.org/2000/svg","text");const{shapeSvg:e,bbox:t}=await(0,a.l)(d,w,void 0,!0);u.width=t.width,u.wrappingWidth=(0,l.F)().flowchart.wrappingWidth,u.height=t.height,u.labelNode=e.node(),w.labelData=u}const m={id:n.id,ports:"diamond"===n.type?b:[],layoutOptions:f,labelText:p,labelData:u,domId:r.db.lookUpDomId(n.id),width:null==k?void 0:k.width,height:null==k?void 0:k.height,type:n.type,el:x,parent:i.parentById[n.id]};h[w.id]=m}))),s}(T,t,x,m,o,E,p);const B=v.insert("g").attr("class","edges edgePath"),C=o.db.getEdges();p=b(C,o,p,v);Object.keys(h).forEach((e=>{const t=h[e];t.parent||p.children.push(t),void 0!==E.childrenById[e]&&(t.labels=[{text:t.labelText,layoutOptions:{"nodeLabels.placement":"[H_CENTER, V_TOP, INSIDE]"},width:t.labelData.width,height:t.labelData.height}],delete t.x,delete t.y,delete t.width,delete t.height)})),f(p.children,E),l.l.info("after layout",JSON.stringify(p,null,2));const S=await s.layout(p);w(0,0,S.children,v,I,o,0),l.l.info("after layout",S),null==(i=S.edges)||i.map((e=>{g(B,e,e.edgeData,o,E,t)})),(0,l.o)({},v,y.diagramPadding,y.useMaxWidth),c.remove()}},x=e=>`.label {\n    font-family: ${e.fontFamily};\n    color: ${e.nodeTextColor||e.textColor};\n  }\n  .cluster-label text {\n    fill: ${e.titleColor};\n  }\n  .cluster-label span {\n    color: ${e.titleColor};\n  }\n\n  .label text,span {\n    fill: ${e.nodeTextColor||e.textColor};\n    color: ${e.nodeTextColor||e.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${e.mainBkg};\n    stroke: ${e.nodeBorder};\n    stroke-width: 1px;\n  }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${e.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${e.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${e.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${e.edgeLabelBackground};\n    rect {\n      opacity: 0.85;\n      background-color: ${e.edgeLabelBackground};\n      fill: ${e.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  .cluster rect {\n    fill: ${e.clusterBkg};\n    stroke: ${e.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${e.titleColor};\n  }\n\n  .cluster span {\n    color: ${e.titleColor};\n  }\n  /* .cluster div {\n    color: ${e.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${e.fontFamily};\n    font-size: 12px;\n    background: ${e.tertiaryColor};\n    border: 1px solid ${e.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${e.textColor};\n  }\n  .subgraph {\n    stroke-width:2;\n    rx:3;\n  }\n  // .subgraph-lvl-1 {\n  //   fill:#ccc;\n  //   // stroke:black;\n  // }\n\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n\n  ${(e=>{let t="";for(let n=0;n<5;n++)t+=`\n      .subgraph-lvl-${n} {\n        fill: ${e[`surface${n}`]};\n        stroke: ${e[`surfacePeer${n}`]};\n      }\n    `;return t})(e)}\n`,m={db:o.d,renderer:k,parser:o.p,styles:x}}}]);